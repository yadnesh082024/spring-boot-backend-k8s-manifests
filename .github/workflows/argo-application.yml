name: Configure app with argo cd

on:
  workflow_dispatch:

jobs:
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      # Step to check out the repository code.
      # This step uses the actions/checkout action to clone the repository.
      - uses: actions/checkout@v4

      # Step to log in with your Azure credentials.
      # This step uses the azure/login action to authenticate with Azure.
      - name: Azure Login action
        uses: azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      # Step to set up kubelogin for non-interactive login.
      # This step uses the azure/use-kubelogin action to configure kubelogin.
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1.2
        with:
          kubelogin-version: 'v0.1.4'

      # Step to retrieve your Azure Kubernetes Service cluster's kubeconfig file.
      # This step uses the azure/aks-set-context action to set the Kubernetes context.
      - name: Get K8s context
        uses: azure/aks-set-context@v4.0.1
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Step to set up kubectl, the Kubernetes command-line tool.
      # This step uses the azure/setup-kubectl action to install kubectl.
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'latest'

      # Step to set up Helm, the package manager for Kubernetes.
      # This step uses the azure/setup-helm action to install Helm.
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'latest'

      - name: Wait for changes to apply
        run: sleep 10

      - name: Configure application with argo cd
        run: |
          helm upgrade --install spring-app-argo-cd ./argocd-configs/argocd-app-helm-chart --namespace argocd --values=../argocd-configs/argocd-app-helm-chart/values.yaml