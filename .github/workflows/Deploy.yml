name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Set the KUBECONFIG environment variable to use the Kubernetes configuration file stored in GitHub Secrets.
      KUBECONFIG: ${{ secrets.KUBECONFIG }}

    steps:
      # Step to check out the repository code.
      # This step uses the actions/checkout action to clone the repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step to set up kubectl, the Kubernetes command-line tool.
      # This step uses the azure/setup-kubectl action to install kubectl.
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'latest'

      # Step to set up Helm, the package manager for Kubernetes.
      # This step uses the azure/setup-helm action to install Helm.
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: 'latest'

      # Step to install the Argo Rollouts CLI.
      # This step downloads the latest version of the Argo Rollouts CLI, makes it executable, and moves it to /usr/local/bin.
      - name: Set up argo-rollouts
        run: |
          curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
          chmod +x ./kubectl-argo-rollouts-linux-amd64
          sudo mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts
          # Verify the installation of Argo Rollouts CLI
          kubectl argo rollouts version

      # Step to set the Kubernetes namespace.
      # This step sets the current context to the specified namespace.
      - name: Set Kubernetes Namespace
        run: kubectl config set-context --current --namespace=spring-app

      # Step to run smoke tests.
      # This step executes the smoke-tests.sh script to verify the application is functioning correctly.
      - name: Run Smoke Tests
        run: ./scripts/smoke-tests.sh

      # Step to rollback the deployment on failure.
      # This step uses the Argo Rollouts CLI to undo the rollout if the smoke tests fail.
      - name: Rollback on Failure
        if: failure()
        run: kubectl argo rollouts undo rollout spring-app --namespace=spring-app

      # Step to print the rollout status.
      # This step checks and prints the status of the rollout to verify if the rollback was successful.
      - name: Print Rollout Status
        run: kubectl argo rollouts get rollout spring-app --namespace=spring-app