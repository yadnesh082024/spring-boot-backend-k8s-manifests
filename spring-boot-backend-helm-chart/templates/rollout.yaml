apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "spring-app.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "spring-app.labels" . | nindent 4 }}
  annotations:
    redeploy-timestamp: "{{ .Release.Time | toString }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "spring-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "spring-app.labels" . | nindent 8 }}
          {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
    spec:
      initContainers:
        - name: init-container
          image: busybox
          command: ['sh', '-c']
          args:
            - |
              # Fetch the image name of the main container
              IMAGE_NAME=$(kubectl get pod $HOSTNAME -o jsonpath='{.spec.containers.image}')
              echo "IMAGE_NAME=$IMAGE_NAME" > /etc/podinfo/image.env
          volumeMounts:
            - name: podinfo
              mountPath: /etc/podinfo
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containers.port }}
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              valueFrom:
                configMapKeyRef:
                  name: podinfo
                  key: image.env
          volumeMounts:
            - name: podinfo
              mountPath: /etc/podinfo
      volumes:
        - name: podinfo
          emptyDir: {}
  strategy:
    canary:
      steps:
        - setWeight: 50
        - analysis:
            templates:
              - templateName: endpoint-tests
        - pause: {}
        - setWeight: 100
